CREATE TABLE INFO(
  ID NUMBER,
  NAME VARCHAR2(100),
  BIRTH DATE,
  BTYPE CHAR(2)
);

DESC INFO; --테이블의정보를 보는 것도가능
SELECT * FROM INFO;

INSERT INTO "INFO" VALUES (1, '홍길동', SYSDATE, 'B');
INSERT INTO "INFO" VALUES (2, '이순신', '2020-12-23', 'B');
INSERT INTO "INFO" ("ID", "NAME") VALUES (3, '임꺽정');
INSERT INTO "INFO" ("BTYPE", "NAME") VALUES ('AB', '강감찬');
INSERT INTO "INFO" ("ID", "NAME", "BIRTH", "BTYPE") VALUES (5, '장영실', '2011-01-26', 'O');
INSERT INTO "INFO" VALUES (2, '이순신', '2020-12-23', 'B');

-- 값 수정하기 (SELECT에서 사용하는 WHERE 조건 형태 활용)
UPDATE "INFO" SET "ID"=10 WHERE "ID"=1;
UPDATE "INFO" SET "NAME"='이길동' WHERE "ID"=1;
UPDATE "INFO" SET "NAME"='이길동' WHERE "ID"=10;
UPDATE "INFO" SET "NAME"='홍길동',"BTYPE"='C' WHERE "ID"=10;
UPDATE "INFO" SET "BIRTH"=SYSDATE WHERE "NAME"='강감찬';
UPDATE "INFO" SET "BIRTH"='1988-09-21', "NAME"='김꺽정' WHERE "ID"=3;
UPDATE "INFO" SET "BTYPE"='A' WHERE "ID"=3;
UPDATE "INFO" SET "ID"=100 WHERE "NAME"='강감찬';
COMMIT;
UPDATE "INFO" SET "BTYPE"='O'; /* WHERE절이 없는 경우 모든 행 수정 */
ROLLBACK;

-- 값 삭제하기(SELECT에서 사용하는 WHERE 조건 형태 활용)
DELETE FROM "INFO"; /* WHERE절이 없는 경우 모든 행 삭제 */
ROLLBACK;
SELECT * FROM INFO WHERE ID = 100;
DELETE FROM "INFO" WHERE "ID"=100;
SELECT * FROM "INFO" WHERE "ID"=3 AND "NAME"='홍길동';
DELETE FROM "INFO" WHERE "ID"=3 AND "NAME"='홍길동';
SELECT * FROM "INFO" WHERE "ID"=3 OR "NAME"='%길동';
DELETE FROM "INFO" WHERE "ID"=3 OR "NAME"='%길동';

-- SELECT 사용해보기 --
INSERT INTO "INFO" VALUES (1, '홍길동', SYSDATE, 'B');
INSERT INTO "INFO" VALUES (2, '이순신', '2020-12-23', 'B');
INSERT INTO "INFO" ("ID", "NAME") VALUES (3, '임꺽정');
INSERT INTO "INFO" ("BTYPE", "NAME") VALUES ('AB', '강감찬');
INSERT INTO "INFO" ("ID", "NAME", "BIRTH", "BTYPE") VALUES (5, '장영실', '2011-01-26', 'O');
INSERT INTO "INFO" VALUES (2, '이순신', '2020-12-23', 'B');

-- 값 조회
SELECT * FROM INFO;
SELECT ID, NAME, BIRTH,BTYPE FROM INFO;
SELECT NAME, BIRTH FROM INFO;
SELECT ID NAME FROM INFO;
SELECT NAME, ID FROM INFO;

-- 검색(WHERE)
SELECT "NAME" FROM "INFO" WHERE "ID"=1;
SELECT "NAME" FROM "INFO" WHERE "ID"=3;
SELECT "NAME" FROM "INFO" WHERE "ID"=100;
SELECT * FROM "INFO" WHERE "ID" IS NULL;
SELECT * FROM "INFO" WHERE "BTYPE" IS NULL;
SELECT * FROM "INFO" WHERE "BTYPE" IS NULL AND "BIRTH" IS NULL;
SELECT * FROM "INFO" WHERE "BTYPE" IS NULL OR "BIRTH" IS NULL;
SELECT * FROM "INFO" WHERE "ID" IS NOT NULL;

SELECT "NAME" FROM "INFO" WHERE "ID"=1 AND "NAME"='홍길동';
SELECT "NAME" FROM "INFO" WHERE "ID"=1 AND "NAME"='AB';
SELECT "NAME" FROM "INFO" WHERE "ID"=1 OR "NAME"='홍길동';
SELECT "NAME" FROM "INFO" WHERE "ID"=1 OR "NAME"='AB';
SELECT "NAME" FROM "INFO" WHERE NOT "NAME"='이순신';
SELECT "NAME" FROM "INFO" WHERE "NAME"!='이순신';
SELECT "NAME" FROM "INFO" WHERE "NAME"&lt;&gt;'이순신';

SELECT "NAME" FROM "INFO" WHERE "ID"!=3;
SELECT * FROM "INFO" WHERE "ID" BETWEEN 2 AND 4;
SELECT * FROM "INFO" WHERE "ID"&gt;3;
SELECT * FROM "INFO" WHERE "BIRTH"&lt;'2021-01-01';
SELECT * FROM "INFO" WHERE "BIRTH" BETWEEN '2020-01-01' AND SYSDATE;
SELECT * FROM "INFO" WHERE "ID"&gt;=3;
SELECT * FROM "INFO" WHERE "ID" IN(1,5,2);
SELECT * FROM "INFO" WHERE "ID" NOT IN(1,5,2);
SELECT "NAME" FROM "INFO" WHERE "NAME" LIKE '%길%';
SELECT "NAME" FROM "INFO" WHERE "NAME" LIKE '%홍길%';
SELECT "NAME" FROM "INFO" WHERE "NAME" LIKE '_홍길%';
SELECT "NAME" FROM "INFO" WHERE "NAME" LIKE '_길%';
SELECT "ID"||"NAME" FROM "INFO" WHERE "ID"=1;
SELECT "ID"||"NAME" AS "NAME" FROM "INFO" WHERE "ID"=1;
SELECT DISTINCT * FROM "INFO";

-- 조회결과 정렬하기
SELECT ID, "NAME", "BIRTH" FROM "INFO" ORDER BY "ID";
SELECT "NAME", "BIRTH" FROM "INFO" ORDER BY "BIRTH" ASC;
SELECT "ID", "NAME", "BTYPE" FROM "INFO" ORDER BY "BTYPE";
SELECT "ID", "NAME", "BTYPE" FROM "INFO" ORDER BY "BTYPE", "NAME";
SELECT "ID", "NAME", "BTYPE" FROM "INFO" ORDER BY "BTYPE" DESC, "NAME" DESC;

DROP TABLE INFO;

-- 제약조건이해하기
-- 방법1 (컬럼 레벨 설정)
CREATE TABLE INFO(
  ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(100) NOT NULL,
  BIRTH DATE,
  BTYPE CHAR(5)
);

-- 방법2(테이블레벨 설정. 여러 컬럼을 대상으로 제약조건을 설정하는 경우 활용)
CREATE TABLE SUBJECT (
  SUB_CODE NUMBER,
  NAME VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_SUBJECT PRIMARY KEY (SUB_CODE) -- PK_SUBJECT라는 이름으로 PRIMARY KEY 제약조건을 설정한다. SUB_CODE라는 컬럼에다가
);

-- 방법3(테이블 생성 후 추가)
CREATE TABLE SCORE(
  ID NUMBER,
  INFO_ID NUMBER,
  SUBJECT_CODE NUMBER,
  SUBJECT_SCORE NUMBER(5, 2),
  CONSTRAINT FK_INFO_ID FOREIGN KEY(INFO_ID) REFERENCES INFO(ID) ON DELETE CASCADE
);
ALTER TABLE SCORE ADD CONSTRAINT PK_SCORE PRIMARY KEY (ID); -- 제약조건이름 PK_SCORE
ALTER TABLE SCORE ADD CONSTRAINT FK_SUBJECT_CODE FOREIGN KEY(SUBJECT_CODE) 
  REFERENCES SUBJECT(SUB_CODE) ON DELETE CASCADE;


INSERT INTO INFO VALUES (1, '홍길동', '1443/01/01', 'B');
INSERT INTO INFO VALUES (2, '이순신', '1545-4-28', 'A');
INSERT INTO INFO VALUES (3, '강감찬', '0948-12-22', 'A');
INSERT INTO INFO VALUES (4, '임꺽정', '1521-10-10', 'O');
INSERT INTO INFO VALUES (5, '장보고', '2020-12-23', 'O');
INSERT INTO INFO VALUES (6, '신사임당', '1504-12-05', 'AB');
INSERT INTO INFO VALUES (7, '장영실', '1399-12-31');
INSERT INTO INFO VALUES (8, '정도전', '1342-10-06', 'A');
INSERT INTO INFO VALUES (9, '김유신', '595-05-09', 'O');
INSERT INTO INFO VALUES (10, '박혁거세', '0069-07-12', 'B');

INSERT INTO INFO VALUES (10, '박혁거세', '0169-07-12', 'AB');
-- ORA-00001: unique constraint (C##TESTER.SYS_C007266) violated

INSERT INTO SUBJECT VALUES(1, 'JAVA');
INSERT INTO SUBJECT VALUES(2, 'JSP');
INSERT INTO SUBJECT VALUES(3, 'DATABASE');
INSERT INTO SUBJECT VALUES(4, 'SPRING');
INSERT INTO SUBJECT VALUES(5, 'NETWORK');


INSERT INTO SCORE VALUES(1, 1, 3, 100);
INSERT INTO SCORE VALUES(2, 1, 2, 90);
INSERT INTO SCORE VALUES(3, 1, 3, 34);
INSERT INTO SCORE VALUES(4, 2, 3, 77);
INSERT INTO SCORE VALUES(5, 2, 3, 56);
INSERT INTO SCORE VALUES(6, 3, 3, 34);
INSERT INTO SCORE VALUES(7, 4, 3, 39);
INSERT INTO SCORE VALUES(8, 4, 3, 59);
INSERT INTO SCORE VALUES(9, 4, 4); -- ORA-00947: not enough values
INSERT INTO SCORE VALUES(10, 4, 5, 12);
INSERT INTO SCORE VALUES(11, 5, 1, 82);
INSERT INTO SCORE VALUES(12, 5, 3, 98);
INSERT INTO SCORE VALUES(13, 6, 1, 91);
INSERT INTO SCORE VALUES(14, 6, 5, 68);
-- 15 ~ 17 은위에 INFO 테이블에서 7번이안들어갓다
INSERT INTO SCORE VALUES(15, 7, 2, 71); -- ORA-02291: integrity constraint (C##TESTER.FK_INFO_ID) violated - parent key not found
INSERT INTO SCORE VALUES(16, 7, 3, 68); -- ORA-02291: integrity constraint (C##TESTER.FK_INFO_ID) violated - parent key not found
INSERT INTO SCORE VALUES(17, 7, 4, 59); -- ORA-02291: integrity constraint (C##TESTER.FK_INFO_ID) violated - parent key not found
INSERT INTO SCORE VALUES(18, 8, 1, 98);
INSERT INTO SCORE VALUES(19, 8, 5, 10);
INSERT INTO SCORE VALUES(20, 9, 1, 47);

INSERT INTO INFO VALUES(1, '홍길동', '1443/01/01', 'B'); --ORA-00001: unique constraint (C##TESTER.SYS_C007266) violated
INSERT INTO INFO VALUES(11, '1443/01/01', 'B');

DELETE FROM INFO;
DELETE FROM SUBJECT;
DELETE FORM SCORE;

-- 시퀀스 (카운터) => 시퀀스는 처음부터 못돌림
CREATE SEQUENCE SEQ_TEST1;

SELECT 1+1 FROM DUAL;
SELECT SEQ_TEST1.NEXTVAL FROM DUAL;
SELECT SEQ_TEST1.CURRVAL FROM DUAL; --이거하기전에 1번은 증가해야되서 위에 NEXTVAL 해줘야함

DROP SEQUENCE SEQ_TEST1;

CREATE SEQUENCE SEQ_INFO NOCACHE;
CREATE SEQUENCE SEQ_SUBJECT NOCACHE;
CREATE SEQUENCE SEQ_SCORE NOCACHE;

-- INFO 시퀀스객체
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '홍길동', '1443/01/01', 'B');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '이순신', '1545-4-28', 'A');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '강감찬', '0948-12-22', 'A');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '임꺽정', '1521-10-10', 'O');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '장보고', '2020-12-23', 'O');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '신사임당', '1504-12-05', 'AB');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '장영실', '1399-12-31');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '정도전', '1342-10-06', 'A');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '김유신', '595-05-09', 'O');
INSERT INTO "INFO" VALUES ("SEQ_INFO".NEXTVAL, '박혁거세', '0069-07-12', 'B');

-- SUBJECT 시퀀스객체
INSERT INTO "SUBJECT" VALUES ("SEQ_SUBJECT".NEXTVAL, 'JAVA');
INSERT INTO "SUBJECT" VALUES ("SEQ_SUBJECT".NEXTVAL, 'JSP');
INSERT INTO "SUBJECT" VALUES ("SEQ_SUBJECT".NEXTVAL, 'DATABASE');
INSERT INTO "SUBJECT" VALUES ("SEQ_SUBJECT".NEXTVAL, 'SPRING');
INSERT INTO "SUBJECT" VALUES ("SEQ_SUBJECT".NEXTVAL, 'NETWORK');

-- SCROE 시퀀스객체
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 1, 1, 100);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 1, 2, 90);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 1, 3, 34);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 2, 1, 77);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 2, 5, 56);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 3, 2, 78);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 4, 1, 39);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 4, 2, 59);
INSERT INTO "SCORE" ("ID", "INFO_ID", "SUBJECT_CODE") VALUES ("SEQ_SCORE".NEXTVAL, 4, 4);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 4, 5, 12);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 5, 1, 82);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 5, 3, 98);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 6, 1, 91);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 6, 5, 68);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 7, 2, 71);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 7, 3, 68);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 7, 4, 59);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 8, 1, 98);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 8, 5, 10);
INSERT INTO "SCORE" VALUES ("SEQ_SCORE".NEXTVAL, 9, 1, 47);

SELECT * FROM INFO;
SELECT * FROM SUBJECT;
SELECT * FROM SCORE;
COMMIT;

-- ======================== 집계함수 ========================
