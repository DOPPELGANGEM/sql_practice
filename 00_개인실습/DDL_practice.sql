-- NOT NULL 제약조건
-- 데이터에 NULL을 허용하지 않고 해당 컬럼에 반드시 값이 기록되어야 하는 경우에 사용하고 특정 컬럼에 값을 저장하거나 수정할 때
-- NULL값을 허용하지 않도록 컬럼 레벨에서 제한한다.
CREATE TABLE USER_NOTNULL(
  USER_NO NUMBER NOT NULL,
  USER_ID VARCHAR2(20) NOT NULL,
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50)
);

-- UNIQUE 제약조건 (중복된 값 허용하지않음)
-- UNIQUE란 중복된 값을 허용하지 않음, 컬럼 입력값에 대해 중복을 제한하는 제약조건으로 컬럼 레벨과
-- 테이블 레벨에 설정 가능하다.

-- 컬럼레벨설정
CREATE TABLE USER_UNIQUE(
  USER_NO NUMBER,
  USER_ID VARCHAR2(20) UNIQUE, -- 컬럼레벨
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50)
);

-- 테이블 레벨에서 설정
CREATE TABLE USER_UNIQUE2(
  USER_NO NUMBER,
  USER_ID VARCHAR2(20),
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50),
  UNIQUE(USER_ID) -- 테이블레벨
);

-- 두개의 컬럼 제약 조건 설정
CREATE TABLE USER_UNIQUE3(
  USER_NO NUMBER,
  USER_ID VARCHAR2(20),
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50),
  UNIQUE(USER_NO, USER_ID)
);

-- PRIMARY KEY (테이블당 하나 설정 가능 NOT NULL+UNIQUE 합친속성)
-- PRIMARY KEY란 NULL과 중복 값을 허용하지 않음(컬럼의 고유 식별자로 사용하기 위해 사용한다.)
-- 테이블에서 한 행의 정보를 구분하기 위한 고유식별자(Identifier)의 역할을 한다.
-- NOT NULL의 의미와 UNIQUE의 의미를 둘 다 가지고 있으며 한 테이블 당 하나만 설정 가능하다. 컬럼레벨과 테이블 레벨 둘다 지정이 가능하다.

-- 컬럼레벨설정
CREATE TABLE USER_PRIMARYKEY(
  USER_NO NUMBER PRIMARY KEY, --컬럼레벨설정
  USER_ID VARCHAR2(20) UNIQUE,
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMIAL VARCHAR2(50)
);

-- 테이블 레벨에서 설정
CREATE TABLE USER_PRIMARYKEY2(
  USER_NO NUMBER,
  USER_ID VARCHAR2(20) UNIQUE,
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50),
  PRIMARY KEY(USER_NO) -- 테이블 레벨 설정
);

-- 두개의 컬럼을 묶어서 하나의 PRIMARY KEY 설정
CREATE TABLE USER_PRIMARYKEY3(
  USER_NO NUMBER,
  USER_ID VARCHAR2(20),
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30),
  GENDER VARCHAR2(10),
  PHONE VARCHAR2(30),
  EMAIL VARCHAR2(50),
  PRIMARY KEY(USER_NO, USER_ID) -- 두개의 컬럼을 묶어서 하나의 PRIMARY KEY 제약조건 설정
);

-- CHECK 제약조건 (데이터 값의 범위나 조건을 지정해 설정한값 허용)
CREATE TABLE USER_CHECK (
  USER_NO NUMBER,
  USER_ID VARCHAR2(20),
  USER_PWD VARCHAR2(30),
  USER_NAME VARCHAR2(30), 
  USER_GENDER VARCHAR2(10) CHECK(USER_GENDER IN('M', 'F')),
  USER_PHONE VARCHAR2(30),
  USER_EMAIL VARCHAR2(50)
);

-- DEFAULT 제약조건 (기본값으로 설정한 값이 자동으로 입력되도록 하는 제약조건)
CREATE TABLE USER_DEFAULT2 (
  USER_NO NUMBER,
  USER_ID VARCHAR2(20) PRIMARY KEY, 
  USER_PWD VARCHAR2(30) NOT NULL,
  USER_NAME VARCHAR2(30) NOT NULL,
  USER_GENDER VARCHAR2(10) CHECK(USER_GENDER IN('M', 'F')),
  USER_PHONE VARCHAR2(30),
  USER_EMAIL VARCHAR2(50),
  USER_DATE DATE DEFAULT SYSDATE
);

INSERT INTO USER_DEFAULT2 VALUES(1, 'khuser01', 'pass01','일용자','M','01082729383','khuser01@kh.com', DEFAULT);
SELECT * FROM USER_DEFAULT2;

-- FOREIGN KEY 제약조건 (참조되는 테이블의 컬럼의값이 존재하면 허용한다. 따로테이블만들어서 본다.)
-- 테이블 참조, Foreign Key, 참조 무결성 제약조건
-- **-- FOREIGN KEY 제약조건**
-- FOREIGN KEY란 참조되는 테이블의 컬럼의 값이 존재하면 허용
-- 참조 무결성을 위한 제약조건으로 참조된 다른테이블이 제공한 값만 사용하도록 제한을 거는 제약조건이다.
-- 참조되는 컬럼과 참조된 컬럼을 통해 테이블간에 관계가 형성되는데 참조되는 값은 제공되는값 외에 NULL을
-- 사용가능하고 참조할 테이블의 참조할 컬럼명을 생략할 경우 PRIMARY KEY로 설정된 컬럼이 자동으로 참조할 컬럼이된다.
-- 참조할 수 있는 컬럼은 기본키(PK)나 UNIQUE만 가능하다.(보통 PK랑 엮는다.)

CREATE TABLE F_CLASS_TBL(
  STUDENT_SCORE NUMBER PRIMARY KEY,
  STUDENT_STATUS VARCHAR2(30)
);

INSERT INTO F_CLASS_TBL VALUES(10,'과락');
INSERT INTO F_CLASS_TBL VALUES(30,'과락');
INSERT INTO F_CLASS_TBL VALUES(60,'겨우통과');
INSERT INTO F_CLASS_TBL VALUES(80,'보통통과');
INSERT INTO F_CLASS_TBL VALUES(100,'만점통과');

DELETE FROM F_CLASS_TBL WHERE STUDENT_SCORE = 100;


CREATE TABLE F_CLASS_TEST_TBL(
  STUDENT_NAME VARCHAR2(30) PRIMARY KEY,
  STUDENT_AGE NUMBER NOT NULL,
  STUDENT_ADDRESS VARCHAR2(50),
  STUDENT_PHONE VARCHAR2(50),
  STUDENT_GENDER VARCHAR2(10) CHECK(STUDENT_GENDER IN('M','F')),
  STUDENT_BIRTH DATE DEFAULT SYSDATE,
  STUDENT_SCORE NUMBER REFERENCES F_CLASS_TBL(STUDENT_SCORE) -- 컬럼레벨
  -- FOREIGN KEY(STUDENT_SCORE) REFERENCES F_CLASS_TBL(STUDENT_SCORE) ON DELETE CASCADE -- 테이블레벨
);

INSERT INTO F_CLASS_TEST_TBL VALUES('일용자', 30, '서울시중구', 010-9877-4090, 'M', DEFAULT, 10);
INSERT INTO F_CLASS_TEST_TBL VALUES('이용자', 31, '서울시강동구', 010-9877-4091, 'F', DEFAULT, 30);
INSERT INTO F_CLASS_TEST_TBL VALUES('삼용자', 32, '서울시강남구', 010-9877-4092, 'M', DEFAULT, 60);
INSERT INTO F_CLASS_TEST_TBL VALUES('사용자', 33, '서울시서대문구', 010-9877-4093, 'F', DEFAULT, 80);
INSERT INTO F_CLASS_TEST_TBL VALUES('오용자', 34, '서울시용산구', 010-9877-4094, 'M', DEFAULT, 100);

SELECT * FROM F_CLASS_TBL;
SELECT * FROM F_CLASS_TEST_TBL;

DROP TABLE F_CLASS_TBL;
DROP TABLE F_CLASS_TEST_TBL;

-- ON DELETE CASCADE : PARENT 삭제 시 CHILD 같이 삭제
-- ON DELETE SET NULL: PARENT 삭제 시 CHILD의 해당 필드 NULL로 업데이트
-- ON DELETE SET DEFAULT : PARENT 삭제 시 CHILD의 해당 필드 DEFAULT 값으로 UPDATE
-- ON DELETE RESTRICT : CHILD 테이블에 PK 값이 없는 경우만 PARENT 삭제
-- ON DELETE NO ACTION : 참조 무결성 제약조건을 위배하는 액션은 불가












